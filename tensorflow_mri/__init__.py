# This file was automatically generated by tools/build/create_api.py.
# Do not edit.
"""TensorFlow MRI."""
import glob as _glob
import os as _os
import sys as _sys

from tensorflow_mri.__about__ import *

# TODO(jmontalt): Remove these imports on release 1.0.0.
from tensorflow_mri.python.ops.array_ops import *
from tensorflow_mri.python.ops.convex_ops import *
from tensorflow_mri.python.ops.fft_ops import *
from tensorflow_mri.python.ops.image_ops import *
from tensorflow_mri.python.ops.math_ops import *
from tensorflow_mri.python.ops.optimizer_ops import *
from tensorflow_mri.python.ops.recon_ops import *
from tensorflow_mri.python.ops.signal_ops import *
from tensorflow_mri.python.ops.traj_ops import *

from tensorflow_mri import python

# Import submodules.
from tensorflow_mri._api import activations
from tensorflow_mri._api import array
from tensorflow_mri._api import callbacks
from tensorflow_mri._api import coils
from tensorflow_mri._api import convex
from tensorflow_mri._api import geometry
from tensorflow_mri._api import image
from tensorflow_mri._api import initializers
from tensorflow_mri._api import io
from tensorflow_mri._api import layers
from tensorflow_mri._api import linalg
from tensorflow_mri._api import losses
from tensorflow_mri._api import math
from tensorflow_mri._api import metrics
from tensorflow_mri._api import models
from tensorflow_mri._api import optimize
from tensorflow_mri._api import plot
from tensorflow_mri._api import recon
from tensorflow_mri._api import sampling
from tensorflow_mri._api import signal
from tensorflow_mri._api import summary

# Make sure directory containing top level submodules is in
# the __path__ so that "from tensorflow_mri.foo import bar" works.
# We're using callbacks, but there's nothing special about that.
_API_MODULE = _sys.modules[__name__].callbacks
_tfmri_api_dir = _os.path.dirname(_os.path.dirname(_API_MODULE.__file__))
_current_module = _sys.modules[__name__]

if not hasattr(_current_module, '__path__'):
  __path__ = [_tfmri_api_dir]
elif _tfmri_api_dir not in __path__:
  __path__.append(_tfmri_api_dir)

# Hook for loading tests by `unittest`.
def load_tests(loader, tests, pattern):
  """Loads all TFMRI tests, including unit tests and doc tests.

  For the parameters, see the
  [`load_tests` protocol](https://docs.python.org/3/library/unittest.html#load-tests-protocol).
  """
  import doctest  # pylint: disable=import-outside-toplevel

  # This loads all the regular unit tests. These three lines essentially
  # replicate the standard behavior if there was no `load_tests` function.
  root_dir = _os.path.dirname(__file__)
  unit_tests = loader.discover(start_dir=root_dir, pattern=pattern)
  tests.addTests(unit_tests)

  def set_up_doc_test(test):
    """Sets up a doctest.

    Runs at the beginning of every doctest. We use it to import common
    packages including NumPy, TensorFlow and TensorFlow MRI. Tests are kept
    more concise by not repeating these imports each time.

    Args:
      test: A `DocTest` object.
    """
    # pylint: disable=import-outside-toplevel,import-self
    import numpy as _np
    import tensorflow as _tf
    import tensorflow_mri as _tfmri
    # Add these packages to globals.
    test.globs['np'] = _np
    test.globs['tf'] = _tf
    test.globs['tfmri'] = _tfmri

  # Now load all the doctests.
  py_files = _glob.glob(_os.path.join(root_dir, '**/*.py'), recursive=True)
  tests.addTests(doctest.DocFileSuite(
      *py_files, module_relative=False, setUp=set_up_doc_test))

  return tests
