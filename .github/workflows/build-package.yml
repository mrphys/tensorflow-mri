name: build

on:
  push:
    branches:
      - master
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:
    branches:
      - master

jobs:

  build:

    name: Build package
    runs-on: ubuntu-latest

    # container:
    #   image: ghcr.io/mrphys/tensorflow-manylinux:1.0.0

    strategy:
      matrix:
        py_version: [3.8, 3.9]
        # py_version: [3.6, 3.7, 3.8, 3.9]

    env:
      PYTHON: python${{ matrix.py_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Lint code
      #   run: |
      #     make lint PY_VERSION=${{ matrix.py_version }}

      # - name: Compile shared library
      #   run: |
      #     make PY_VERSION=${{ matrix.py_version }}

      # - name: Install required packages
      #   run: |
      #     $PYTHON -m pip install -r requirements.txt

      # - name: Run test suite
      #   run: |
      #     make test PY_VERSION=${{ matrix.py_version }}

      # - name: Build wheel
      #   run: |
      #     make wheel PY_VERSION=${{ matrix.py_version }}

      # - name: Upload wheel
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: wheels
      #     path: ./artifacts/*.whl

      - name: Build docs
        run: |
          pip install sphinx furo
          make docs PY_VERSION=${{ matrix.py_version }}
          # export TMPDIR=$(mktemp -d)
          # cp -r ./tools/docs/_build/html/* $TMPDIR/
          # touch $TMPDIR/.nojekyll
          # echo "docs_dir=TMPDIR" >> $GITHUB_ENV

      - name: Upload docs
        if: matrix.py_version == 3.9
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: ./tools/docs/_build/html

      - name: Checkout docs
        uses: actions/checkout@v2
        with:
          ref: docs

      - name: Clean docs
        run: |
          rm -r ./*

      - name: Download docs
        uses: actions/download-artifact@v2
        with:
          name: docs
      
      - name: Publish docs to GitHub Pages
        if: matrix.py_version == 3.9
        run: |
          git config --global user.name mrphys
          git config --global user.email mrphys@users.noreply.github.com
          git add -A
          git commit -m "CI/CD - Update docs"
          git push --force

      # - name: Publish to Test PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      #     repository_url: https://test.pypi.org/legacy/
      #     packages_dir: artifacts/
      #     skip_existing: true

      # - name: Publish to PyPI
      #   if: startsWith(github.ref, 'refs/tags')
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     password: ${{ secrets.PYPI_API_TOKEN }}
      #     packages_dir: artifacts/
